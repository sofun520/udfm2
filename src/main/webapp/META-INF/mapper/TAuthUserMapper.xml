<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.springmvc.dao.TAuthUserMapper">
	<resultMap id="BaseResultMap" type="cn.springmvc.model.TAuthUser">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="USERNAME" property="username" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
		<result column="EMAIL" property="email" jdbcType="VARCHAR" />
		<result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
		<result column="REGIST_DATE" property="registDate" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List">
		ID, USERNAME, PASSWORD, MOBILE, EMAIL, ROLE_ID, REGIST_DATE
	</sql>

	<select id="find" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_auth_user
		where ID = #{id,jdbcType=INTEGER}
	</select>

	<select id="checkLogin" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from t_auth_user
		where USERNAME=#{username} and PASSWORD=#{password}
	</select>

	<select id="query" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from t_auth_user
	</select>

	<delete id="delete" parameterType="java.lang.Integer">
		delete from t_auth_user
		where
		ID = #{id,jdbcType=INTEGER}
	</delete>


	<insert id="insert" parameterType="cn.springmvc.model.TAuthUser">
		insert into t_auth_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="username != null">
				USERNAME,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="mobile != null">
				MOBILE,
			</if>
			<if test="email != null">
				EMAIL,
			</if>
			<if test="roleId != null">
				ROLE_ID,
			</if>
			<if test="registDate != null">
				REGIST_DATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="registDate != null">
				#{registDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="cn.springmvc.model.TAuthUser">
		update t_auth_user
		<set>
			<if test="username != null">
				USERNAME = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				MOBILE = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				EMAIL = #{email,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				ROLE_ID = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="registDate != null">
				REGIST_DATE = #{registDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>

</mapper>